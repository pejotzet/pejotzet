<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>QEMU on Net i Dev Blog</title>
    <link>https://pejotzet.github.io/pejotzet/tags/qemu/</link>
    <description>Recent content in QEMU on Net i Dev Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl</language>
    <lastBuildDate>Sun, 13 Aug 2023 07:58:41 +0000</lastBuildDate><atom:link href="https://pejotzet.github.io/pejotzet/tags/qemu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Budowanie aplikacji dla SBC w środowisku emulowanym</title>
      <link>https://pejotzet.github.io/pejotzet/post/2023-08-13-emulated-building-for-sbc/</link>
      <pubDate>Sun, 13 Aug 2023 07:58:41 +0000</pubDate>
      
      <guid>https://pejotzet.github.io/pejotzet/post/2023-08-13-emulated-building-for-sbc/</guid>
      <description>&lt;p&gt;Komputery jednopłytkowe (ang. SBC — &lt;em&gt;Single Board Computer&lt;/em&gt;) to uniwersalne urządzenia mikroprocesorowe pracujące pod kontrolą systemu operacyjnego.
Zazwyczaj systemem tym jest Linux.
Architektury komputerów jednopłytkowych mogą istotnie się różnić od architektur stosowanych dla komputerów osobistych.
Niestety natywne uruchamianie kodu z wykorzystaniem GUI pracującego na systemie &lt;em&gt;target&lt;/em&gt; jest często niewykonalne, głównie ze względu na ograniczony interfejs użytkownika i niezbyt duże zasoby urządzenia.
Zazwyczaj problem ten rozwiązuje się przy użyciu narzędzi do kompilacji skrośnej.&lt;/p&gt;
&lt;p&gt;W niniejszym opracowaniu przedstawiono podejście alternatywne bazujące na wykorzystaniu emulacji architektury urządzenia docelowego z wykorzystaniem &lt;code&gt;QEMU&lt;/code&gt; i połączonej z hermetyzacją środowiska developerskiego w kontenerze Docker&amp;rsquo;a.
Dzięki tej technice możliwe jest wygenerowanie kodu binarnego dla urządzenia docelowego bez korzystania z technik kompilacji skrośnej.
Jako frontend dewelopera zaproponowano wykorzystanie programu &lt;code&gt;VS Code&lt;/code&gt; oraz techniki &lt;code&gt;DevContainers&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
